var angular2_1 = require('angular2/angular2');
var NgGrid_1 = require('src/NgGrid');
function main() {
    describe("NgGrid Directive", function () {
        it("should initialise element styles and config onInit", function () {
            spyOn(angular2_1.Renderer.prototype, "setElementClass");
            spyOn(angular2_1.Renderer.prototype, "setElementStyle");
            spyOn(NgGrid_1.NgGrid.prototype, "setConfig");
            var renderer = new angular2_1.Renderer();
            var ngGrid = new NgGrid_1.NgGrid(null, null, renderer, null);
            ngGrid.onInit();
            expect(renderer.setElementClass).toHaveBeenCalled();
            expect(renderer.setElementStyle).toHaveBeenCalled();
            expect(ngGrid.setConfig).toHaveBeenCalled();
            renderer.setElementStyle.calls.reset();
            renderer.setElementClass.calls.reset();
            ngGrid.setConfig.calls.reset();
            ngGrid.autoStyle = false;
            ngGrid.onInit();
            expect(renderer.setElementClass).toHaveBeenCalled();
            expect(renderer.setElementStyle).not.toHaveBeenCalled();
            expect(ngGrid.setConfig).toHaveBeenCalled();
        });
        it("should set dragEnable to the relevant value on enable/disable drag", function () {
            var ngGrid = new NgGrid_1.NgGrid(null, null, null, null);
            ngGrid.dragEnable = false;
            ngGrid.enableDrag();
            expect(ngGrid.dragEnable).toBe(true);
            ngGrid.disableDrag();
            expect(ngGrid.dragEnable).toBe(false);
        });
    });
}
exports.main = main;

//# sourceMappingURL=data:application/json;base64,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dXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlbmRlcmVyLCBLZXlWYWx1ZURpZmZlcnMsIER5bmFtaWNDb21wb25lbnRMb2FkZXIgfSBmcm9tICdhbmd1bGFyMi9hbmd1bGFyMic7XHJcbmltcG9ydCB7IE5nR3JpZCB9IGZyb20gJ3NyYy9OZ0dyaWQnO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIG1haW4oKSB7XHJcblx0ZGVzY3JpYmUoXCJOZ0dyaWQgRGlyZWN0aXZlXCIsICgpID0+IHtcclxuXHRcdGl0KFwic2hvdWxkIGluaXRpYWxpc2UgZWxlbWVudCBzdHlsZXMgYW5kIGNvbmZpZyBvbkluaXRcIiwgKCkgPT4ge1xyXG5cdFx0XHRzcHlPbihSZW5kZXJlci5wcm90b3R5cGUsIFwic2V0RWxlbWVudENsYXNzXCIpO1xyXG5cdFx0XHRzcHlPbihSZW5kZXJlci5wcm90b3R5cGUsIFwic2V0RWxlbWVudFN0eWxlXCIpO1xyXG5cdFx0XHRzcHlPbihOZ0dyaWQucHJvdG90eXBlLCBcInNldENvbmZpZ1wiKTtcclxuXHRcdFx0XHJcblx0XHRcdHZhciByZW5kZXJlciA9IG5ldyBSZW5kZXJlcigpO1xyXG5cdFx0XHR2YXIgbmdHcmlkID0gbmV3IE5nR3JpZChudWxsLCBudWxsLCByZW5kZXJlciwgbnVsbCk7XHJcblx0XHRcdFxyXG5cdFx0XHRuZ0dyaWQub25Jbml0KCk7XHJcblx0XHRcdFxyXG5cdFx0XHRleHBlY3QocmVuZGVyZXIuc2V0RWxlbWVudENsYXNzKS50b0hhdmVCZWVuQ2FsbGVkKCk7XHJcblx0XHRcdGV4cGVjdChyZW5kZXJlci5zZXRFbGVtZW50U3R5bGUpLnRvSGF2ZUJlZW5DYWxsZWQoKTtcclxuXHRcdFx0ZXhwZWN0KG5nR3JpZC5zZXRDb25maWcpLnRvSGF2ZUJlZW5DYWxsZWQoKTtcclxuXHRcdFx0XHJcblx0XHRcdCg8YW55PnJlbmRlcmVyLnNldEVsZW1lbnRTdHlsZSkuY2FsbHMucmVzZXQoKTtcclxuXHRcdFx0KDxhbnk+cmVuZGVyZXIuc2V0RWxlbWVudENsYXNzKS5jYWxscy5yZXNldCgpO1xyXG5cdFx0XHQoPGFueT5uZ0dyaWQuc2V0Q29uZmlnKS5jYWxscy5yZXNldCgpO1xyXG5cdFx0XHRcclxuXHRcdFx0bmdHcmlkLmF1dG9TdHlsZSA9IGZhbHNlO1xyXG5cdFx0XHRuZ0dyaWQub25Jbml0KCk7XHJcblx0XHRcdFxyXG5cdFx0XHRleHBlY3QocmVuZGVyZXIuc2V0RWxlbWVudENsYXNzKS50b0hhdmVCZWVuQ2FsbGVkKCk7XHJcblx0XHRcdGV4cGVjdChyZW5kZXJlci5zZXRFbGVtZW50U3R5bGUpLm5vdC50b0hhdmVCZWVuQ2FsbGVkKCk7XHJcblx0XHRcdGV4cGVjdChuZ0dyaWQuc2V0Q29uZmlnKS50b0hhdmVCZWVuQ2FsbGVkKCk7XHJcblx0XHR9KTtcclxuXHRcdFxyXG5cdFx0aXQoXCJzaG91bGQgc2V0IGRyYWdFbmFibGUgdG8gdGhlIHJlbGV2YW50IHZhbHVlIG9uIGVuYWJsZS9kaXNhYmxlIGRyYWdcIiwgKCkgPT4ge1xyXG5cdFx0XHR2YXIgbmdHcmlkID0gbmV3IE5nR3JpZChudWxsLCBudWxsLCBudWxsLCBudWxsKTtcclxuXHRcdFx0XHJcblx0XHRcdG5nR3JpZC5kcmFnRW5hYmxlID0gZmFsc2U7XHJcblx0XHRcdG5nR3JpZC5lbmFibGVEcmFnKCk7XHJcblx0XHRcdFxyXG5cdFx0XHRleHBlY3QobmdHcmlkLmRyYWdFbmFibGUpLnRvQmUodHJ1ZSk7XHJcblx0XHRcdFxyXG5cdFx0XHRuZ0dyaWQuZGlzYWJsZURyYWcoKTtcclxuXHRcdFx0XHJcblx0XHRcdGV4cGVjdChuZ0dyaWQuZHJhZ0VuYWJsZSkudG9CZShmYWxzZSk7XHJcblx0XHR9KTtcclxuXHR9KTtcclxufSJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==